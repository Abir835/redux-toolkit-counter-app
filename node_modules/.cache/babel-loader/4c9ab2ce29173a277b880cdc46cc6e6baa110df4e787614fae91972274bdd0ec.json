{"ast":null,"code":"var _jsxFileName = \"/home/bs966/Documents/React/redux-toolkit-counter-app/src/features/posts/postView.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostView = () => {\n  _s();\n  const {\n    isLoading,\n    posts,\n    error\n  } = useSelector(state => state.posts);\n  console.log(posts);\n  console.log(error);\n  console.log(isLoading);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loding........\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 27\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 23\n    }, this), posts && posts.map(post => {\n      return {};\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n_s(PostView, \"lTWJKmii8tXleaHI9SK4V3YjGDs=\", false, function () {\n  return [useSelector];\n});\n_c = PostView;\nexport default PostView;\nvar _c;\n$RefreshReg$(_c, \"PostView\");","map":{"version":3,"names":["React","useSelector","jsxDEV","_jsxDEV","PostView","_s","isLoading","posts","error","state","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","_c","$RefreshReg$"],"sources":["/home/bs966/Documents/React/redux-toolkit-counter-app/src/features/posts/postView.js"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\n\nconst PostView = () =>{\n    const {isLoading, posts, error} = useSelector((state) => state.posts);\n    console.log(posts);\n    console.log(error);\n    console.log(isLoading);\n\n    return(\n        <div>\n            <h2>Post View</h2>\n            {isLoading && <h3>Loding........</h3>}\n            {error && <h3>{error}</h3>}\n            {posts && posts.map((post) =>{\n                return{\n                    \n                }\n            })}\n        </div>\n    )\n};\n\nexport default PostView;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,QAAQ,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAClB,MAAM;IAACC,SAAS;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACF,KAAK,CAAC;EACrEG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAClBG,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAClBE,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;EAEtB,oBACIH,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBV,SAAS,iBAAIH,OAAA;MAAAS,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpCR,KAAK,iBAAIL,OAAA;MAAAS,QAAA,EAAKJ;IAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACzBT,KAAK,IAAIA,KAAK,CAACU,GAAG,CAAEC,IAAI,IAAI;MACzB,OAAM,CAEN,CAAC;IACL,CAAC,CAAC;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACX,EAAA,CAlBID,QAAQ;EAAA,QACwBH,WAAW;AAAA;AAAAkB,EAAA,GAD3Cf,QAAQ;AAoBd,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}