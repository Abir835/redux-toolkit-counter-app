{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n\n// collection of logic\nexport const counterSlice = createSlice({\n  name: \"counter\",\n  initialState: {\n    count: 0\n  },\n  reducers: {\n    increment: state => {\n      state.count = state.count + 1;\n    },\n    decrement: state => {\n      state.count = state.count - 1;\n    },\n    reset: state => {\n      state.count = 0;\n    }\n  }\n});\nexport const {\n  increment,\n  decrement,\n  reset\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","count","reducers","increment","state","decrement","reset","actions","reducer"],"sources":["/home/bs966/Documents/React/redux-toolkit-counter-app/src/features/counter/counterSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\n// collection of logic\nexport const counterSlice = createSlice({\n    name: \"counter\",\n    initialState: {count: 0},\n    reducers: {\n        increment: state=> {\n            state.count = state.count + 1\n        },\n        decrement: state =>{\n            state.count = state.count - 1\n        },\n        reset: state =>{\n            state.count = 0\n        }\n    }\n});\nexport const {increment, decrement, reset} = counterSlice.actions;\n\nexport default counterSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;;AAE9C;AACA,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IAACC,KAAK,EAAE;EAAC,CAAC;EACxBC,QAAQ,EAAE;IACNC,SAAS,EAAEC,KAAK,IAAG;MACfA,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,GAAG,CAAC;IACjC,CAAC;IACDI,SAAS,EAAED,KAAK,IAAG;MACfA,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACH,KAAK,GAAG,CAAC;IACjC,CAAC;IACDK,KAAK,EAAEF,KAAK,IAAG;MACXA,KAAK,CAACH,KAAK,GAAG,CAAC;IACnB;EACJ;AACJ,CAAC,CAAC;AACF,OAAO,MAAM;EAACE,SAAS;EAAEE,SAAS;EAAEC;AAAK,CAAC,GAAGR,YAAY,CAACS,OAAO;AAEjE,eAAeT,YAAY,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}