{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { act } from \"react-dom/test-utils\";\nexport const fetchPosts = createAsyncThunk(\"posts/fetchPosts\", async () => {\n  const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n  return res.data;\n});\nconst postSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    isLoading: false,\n    posts: [],\n    error: null\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchPosts.pending, state => {\n      state.isLoading = true;\n    });\n    builder.addCase(fetchPosts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.posts = action.payload;\n      state.error = null;\n    });\n    builder.addCase(fetchPosts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.posts = [];\n      state.error = action.error.message;\n    });\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","act","fetchPosts","res","get","data","postSlice","name","initialState","isLoading","posts","error","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","reducer"],"sources":["/home/bs966/Documents/React/redux-toolkit-counter-app/src/features/posts/postSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { act } from \"react-dom/test-utils\";\n\n\nexport const fetchPosts = createAsyncThunk(\"posts/fetchPosts\", async()=> {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n    return res.data\n});\n\nconst postSlice = createSlice({\n    name: 'posts',\n    initialState:{\n        isLoading: false,\n        posts: [],\n        error: null\n    },\n    extraReducers:(builder) =>{\n        builder.addCase(fetchPosts.pending, (state) =>{\n            state.isLoading= true;\n        });\n        builder.addCase(fetchPosts.fulfilled, (state, action) =>{\n            state.isLoading = false;\n            state.posts = action.payload;\n            state.error = null;\n        });\n        builder.addCase(fetchPosts.rejected, (state, action) =>{\n            state.isLoading = false;\n            state.posts = [];\n            state.error = action.error.message;\n        });\n\n    }\n\n});\n\nexport default postSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,sBAAsB;AAG1C,OAAO,MAAMC,UAAU,GAAGJ,gBAAgB,CAAC,kBAAkB,EAAE,YAAU;EACrE,MAAMK,GAAG,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,4CAA4C,CAAC;EACzE,OAAOD,GAAG,CAACE,IAAI;AACnB,CAAC,CAAC;AAEF,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC1BQ,IAAI,EAAE,OAAO;EACbC,YAAY,EAAC;IACTC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE;EACX,CAAC;EACDC,aAAa,EAAEC,OAAO,IAAI;IACtBA,OAAO,CAACC,OAAO,CAACZ,UAAU,CAACa,OAAO,EAAGC,KAAK,IAAI;MAC1CA,KAAK,CAACP,SAAS,GAAE,IAAI;IACzB,CAAC,CAAC;IACFI,OAAO,CAACC,OAAO,CAACZ,UAAU,CAACe,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAI;MACpDF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BH,KAAK,CAACL,KAAK,GAAG,IAAI;IACtB,CAAC,CAAC;IACFE,OAAO,CAACC,OAAO,CAACZ,UAAU,CAACkB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAI;MACnDF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,KAAK,GAAG,EAAE;MAChBM,KAAK,CAACL,KAAK,GAAGO,MAAM,CAACP,KAAK,CAACU,OAAO;IACtC,CAAC,CAAC;EAEN;AAEJ,CAAC,CAAC;AAEF,eAAef,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}